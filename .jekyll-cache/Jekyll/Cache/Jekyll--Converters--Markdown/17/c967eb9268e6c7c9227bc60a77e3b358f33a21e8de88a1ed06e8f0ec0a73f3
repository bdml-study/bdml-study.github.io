I"<p>이번시간에는 <strong>Sherlock: A Deep Learning Approach to Semantic Data Type Detection</strong> 논문을 리뷰해볼 예정입니다.</p>

<p>이 논문은 테이블 데이터에서 컬럼의 내용만 보고 컬럼의 semantic type을 추출하기 위한 방법을 제시하고 있습니다.</p>

<p>그럼 시작하겠습니다.</p>

<!--more-->

<h2 id="abstract">Abstract</h2>

<p>테이블 형태의 데이터에서 각 컬럼별 semantic type을 올바르게 감지하는것은 데이터 사이언스에서 매우 중요하다.</p>

<p>하지만 기존 데이터 분석 시스템은 semantic type을 감지하기 위해 dictionary lookup, 정규표현식 등에 의존하고 있다.</p>

<p>이 방법들은 더티데이터에 강건하지 않고, 적은 수의 타입만 판별가능하다.</p>

<p>이 논문에서는 sherlock이라는 multi-input deep neural network를 통해 semantic type을 감지한다.</p>

<h2 id="introduction">INTRODUCTION</h2>

<p>데이터 준비 및 분석 시스템은 데이터 컬럼의 타입을 정확하게 감지하는데 많은 영향을 받는다</p>

<p>대부분의 시스템은 atomic type을 감지하지만, semantic type은 (atomic type에 비해)불균형적으로 더 강력하고 필수적이다</p>

<p>semantic type은 column과 실제 개념간의 대응 관계를 설정하여 좀 더 명확하고 자세한(finer-grained) 설명을 제공한다</p>

<p>하지만 대부분 type은 다음 표와 같이 표현하는 방법이 많다 (structual 하지 않다)</p>

<figure class="image-card width-wide caption">
  <img src="/images/seminar02/table1.png" alt="table1" />
  
</figure>

<p>그리고 기존의 정규표현식 매칭 방법과 dictionary lookup과 같은 방식은 단순 유형을 감지하는데 좋지만 복잡한 데이터 유형이나 더티 데이터에 매우 취약하다</p>

<p>특히 데이터 프레임의 헤더명을 참고해서 데이터 타입을 알아내는 Tableau같은 어플리케이션에서 원래 있던 헤더를 제거하면 전혀 type 예측을 하지 못하는 것을 볼 수 있다</p>

<figure class="image-card width-wide caption">
  <img src="/images/seminar02/figure2.png" alt="table1" />
  
</figure>

<p>최근 급부상중인 딥러닝 프레임워크가 대규모 코퍼스 학습에 매우 뛰어난 것에 영감을 받아 sherlock을 만들었다</p>

<p>일단 T2Dv2 Gold Standard에 따라서, DBpedia의 속성을 WebTable corpus와 일치시키는 78개의 semantic type을 고려했다</p>

<p>VizNet corpus를 통해 686,765개의 실제 데이터 컬럼을 추출했다</p>

<p>이 논문에서 각 column은 column value들이 column header에 매칭되는 것으로 간주한다</p>

<p>1,588개의 특성을 추출하고 다양한 통계적, 의미론적 특성들을 설명한다</p>

<ul>
  <li>그리고 column header를 semantic type의 label로 간주하여 semantic type 감지 문제를 multi class classification 문제로 바꿨다</li>
  <li>뉴럴넷의 성능을 좌우하는 type을 검사 → 성능 모델링을 위한 각 feature category의 contribution을 조사하고(?) → 의사결정트리 baseline에서 feature importance를 추출 → 학습된 모델을 사람의 annotation과 결합할 수 있는 가능성을 제안하는 error-reject 곡선을 제시(????????)</li>
</ul>
:ET